# Generated by Django 4.2.5 on 2023-12-08 00:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the Record Label.', max_length=60)),
                ('asin', models.CharField(help_text='Amazon Standard Identification Number', max_length=10)),
                ('cover', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('website', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='ArtistGenre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='searches.artist')),
            ],
        ),
        migrations.CreateModel(
            name='RecordLabel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the Record Label.', max_length=75)),
                ('website', models.CharField(max_length=200)),
                ('location', models.CharField(choices=[('LDN', 'London, England'), ('NY', 'New York City, US'), ('CA', 'California, US'), ('0-Town', 'Oakland, US'), ('FL', 'Florida, US'), ('SE', 'Sweden'), ('BCN', 'Barcelona, Spain'), ('CDMX', 'Mexico City, Mexico'), ('MI', 'Milan Italy'), ('UK', 'United Kingdom'), ('MNY', 'Manhattan, US')], max_length=6, verbose_name='The location of the label')),
            ],
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('acousticness', models.FloatField()),
                ('danceability', models.FloatField()),
                ('duration_ms', models.IntegerField()),
                ('energy', models.FloatField()),
                ('instrumentalness', models.FloatField()),
                ('liveness', models.FloatField()),
                ('loudness', models.FloatField()),
                ('speechiness', models.FloatField()),
                ('year', models.IntegerField()),
                ('release_date', models.DateField(blank=True, null=True)),
                ('tempo', models.FloatField()),
                ('album', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='searches.album')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='searches.artist')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(help_text='Rating of the song.')),
                ('content', models.TextField(help_text='Review Content')),
                ('date_created', models.DateTimeField(auto_now_add=True, help_text='Date that the review was created')),
                ('date_edited', models.DateTimeField(blank=True, help_text='Date that the review was edited', null=True)),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='searches.song')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.CharField(max_length=25)),
                ('description', models.TextField(help_text='Description of Genre.')),
                ('artist', models.ManyToManyField(related_name='art', through='searches.ArtistGenre', to='searches.artist')),
            ],
        ),
        migrations.AddField(
            model_name='artistgenre',
            name='genre',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='searches.genre'),
        ),
        migrations.AddField(
            model_name='artist',
            name='genre',
            field=models.ManyToManyField(related_name='gen', through='searches.ArtistGenre', to='searches.genre'),
        ),
        migrations.CreateModel(
            name='AlbumRecordLabel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='searches.album')),
                ('record_label', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='searches.recordlabel')),
            ],
        ),
    ]
